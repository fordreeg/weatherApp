{"version":3,"sources":["API/axiosInstance.js","API/weatherApi.js","utils/convertTimestamp.js","Redux/city_list_reducer.js","Components/modal/modalMoreDetails.jsx","Components/Card/CardItem.jsx","Components/modal/addNewCardModal.jsx","Components/CityList/CityList.jsx","App.js","Redux/redux_store.js","index.js","Components/modal/modalMoreDetails.module.scss","Components/Card/CardItem.module.scss","App.module.scss","Components/CityList/CityList.module.scss"],"names":["axiosInstance","axios","baseURL","API_KEY","WeatherApi","getCities","cityID","get","getNewCityName","text","getHourlyForecast","lat","lon","timeConverter","unixTime","isHourlyForecast","currentData","Date","months","month","getMonth","date","getDate","hour","getHours","h","min","getMinutes","m","ampm","SET_FORECAST_CITIES","SET_DEFAULT_FORECAST_CITIES","IS_FETCHING","IS_UPDATE","UPDATE_FORECAST_CITY","SET_NEW_CITY_NAME","SET_ERROR","UPLOAD_HOURLY_FORECAST","RESET_HOURLY_FORECAST","HIDDEN_IDENTICAL_CITY","REMOVE_CITY","initialState","cities","isFetching","isUpdate","isIdenticalCity","newCityName","hourlyForecast","setNewCityNameAC","type","toggleFetchingAC","updateInProgressAC","removeCityAC","getCity","dispatch","a","response","cityData","data","resetHourlyForecast","hiddenIdenticalCityError","ModalMoreDetails","updateInProgress","props","useDispatch","useSelector","state","useState","open","setOpen","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","weatherIcon","city","weather","icon","identLeftHourlyForecastItem","handleClose","Button","variant","color","disabled","sx","borderColor","onClick","coord","statusText","hourly","splice","map","key","time","dt","temp","Math","round","hourlyForecas","Dialog","onClose","backgroundColor","backdropFilter","aria-labelledby","DialogTitle","id","className","style","title","dateTime","name","sys","country","btnClose","DialogContent","DialogContentText","tempWrapper","src","alt","main","forecast","feels_like","temp_min","temp_max","description","clouds","all","pressur","pressure","humidity","wind","speed","rain","snow","item","index","identLeft","CircularProgress","HourlyForecastItem","identL","temperature","Box","hourlyForecast__item","top","left","hourlyForecast__icon","hourlyForecast__time","CardItem","toUpperCase","slice","some","wrapper","loader","head","body","footer","Divider","btns","onDeleteCity","JSON","parse","localStorage","getItem","removeCity","onUpdateForecastCity","updateForecastCity","Buttons","Tooltip","placement","IconButton","aria-label","AddNewCardModal","error","setError","errorPopup__wrapper","errorPopup","errorPopup__close","Fab","border","example","TextField","autoFocus","margin","label","fullWidth","value","onChange","e","target","DialogActions","status","then","result","message","CityList","useEffect","size","thickness","position","inset","card","addCard","App","app","exact","path","to","reducers","combineReducers","action","identicalCities","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.923bc238.chunk.js","sourcesContent":["import * as axios from \"axios\"\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://api.openweathermap.org/data/2.5/'\r\n});\r\n\r\nexport default axiosInstance;","import axiosInstance from \"./axiosInstance\";\r\n\r\nconst API_KEY = '4b7c90762237282b15b2b9f3ae36eec5';\r\n\r\nconst WeatherApi = {\r\n    getCities: (cityID) => {\r\n        return axiosInstance.get(`weather?id=${cityID}&units=metric&appid=${API_KEY}`)\r\n    },\r\n    getNewCityName: (text) => {\r\n        return axiosInstance.get(`weather?q=${text}&units=metric&appid=${API_KEY}`)\r\n    },\r\n    getHourlyForecast: (lat, lon) => {\r\n        return axiosInstance.get(`onecall?lat=${lat}&lon=${lon}&exclude=minutely,daily&units=metric&appid=${API_KEY}`)\r\n    }\r\n};\r\n\r\nexport default WeatherApi;","export default function timeConverter(unixTime, isHourlyForecast = false){\r\n    let currentData = new Date(unixTime * 1000),\r\n        months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'],\r\n        month = months[currentData.getMonth()],\r\n        date = currentData.getDate(),\r\n        hour = currentData.getHours(),\r\n        h = hour,\r\n        min = currentData.getMinutes(),\r\n        m = min < 10 ? '0'+min : min,\r\n        ampm = 'am';\r\n    \r\n    if (hour > 12) {\r\n        h = hour - 12;\r\n        ampm = 'pm';\r\n    } else if (hour === 12) {\r\n        h = 12;\r\n        ampm = 'pm';\r\n    } else if (hour === 0) {\r\n        h = 12;\r\n    }\r\n    \r\n    return isHourlyForecast ? h + ampm :date + ' ' + month  + ' ' + h + ':' + m + ampm;\r\n}","import WeatherApi from \"../API/weatherApi\";\r\nimport timeConverter from \"../utils/convertTimestamp\";\r\n\r\nconst SET_FORECAST_CITIES = 'SET_FORECAST_CITIES',\r\n    SET_DEFAULT_FORECAST_CITIES = 'SET_DEFAULT_FORECAST_CITIES',\r\n    IS_FETCHING = 'IS_FETCHING',\r\n    IS_UPDATE = 'IS_UPDATE',\r\n    UPDATE_FORECAST_CITY = 'UPDATE_FORECAST_CITY',\r\n    SET_NEW_CITY_NAME = 'SET_NEW_CITY_NAME',\r\n    SET_ERROR = 'SET_ERROR',\r\n    UPLOAD_HOURLY_FORECAST = 'UPLOAD_HOURLY_FORECAST',\r\n    RESET_HOURLY_FORECAST = 'RESET_HOURLY_FORECAST',\r\n    HIDDEN_IDENTICAL_CITY = 'HIDDEN_IDENTICAL_CITY',\r\n    REMOVE_CITY = 'REMOVE_CITY';\r\n\r\nconst initialState = {\r\n    cities: [],\r\n    isFetching: null,\r\n    isUpdate: [],\r\n    isIdenticalCity: false,\r\n    newCityName: '',\r\n    hourlyForecast: null,\r\n};\r\nexport default function cityListReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_FORECAST_CITIES:\r\n            const identicalCities = state.cities.some(city => city.id === action.cityData.id);\r\n            \r\n            if (identicalCities) {\r\n                return {\r\n                    ...state,\r\n                    isIdenticalCity: true,\r\n                    newCityName: '',\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cities: [...state.cities, action.cityData],\r\n                    newCityName: '',\r\n                    isIdenticalCity: false,\r\n                }\r\n            }\r\n        case HIDDEN_IDENTICAL_CITY:\r\n            return {\r\n                ...state,\r\n                isIdenticalCity: false\r\n            }\r\n        case SET_DEFAULT_FORECAST_CITIES:\r\n            return {\r\n                ...state,\r\n                cities: [...state.cities, action.cityData]\r\n            }\r\n        case UPDATE_FORECAST_CITY:\r\n            return {\r\n                ...state,\r\n                cities: state.cities.map(city => {\r\n                    if (city.id === action.cityData.id) {\r\n                        return {...city, ...action.cityData}\r\n                    }\r\n                    return city\r\n                })\r\n            }\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        case UPLOAD_HOURLY_FORECAST:\r\n            return {\r\n                ...state,\r\n                hourlyForecast: [...action.hourlyForecas]\r\n            }\r\n        case RESET_HOURLY_FORECAST:\r\n            return {\r\n                ...state,\r\n                hourlyForecast: null\r\n            }\r\n        case REMOVE_CITY:\r\n            return {\r\n                ...state,\r\n                cities: state.cities.filter(city => city.id !== action.cityID.id)\r\n            }\r\n        case SET_NEW_CITY_NAME:\r\n            return {\r\n                ...state,\r\n                newCityName: action.text\r\n            }\r\n        case IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case IS_UPDATE:\r\n            return {\r\n                ...state,\r\n                isUpdate: action.isUpdate\r\n                    ? [...state.isUpdate, action.cityID]\r\n                    : state.isUpdate.filter(id => id !== action.cityID)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setForecastCityAC = (cityData) => ({type: SET_FORECAST_CITIES, cityData});\r\nexport const setDefaultForecastCityAC = (cityData) => ({type: SET_DEFAULT_FORECAST_CITIES, cityData});\r\nexport const setNewCityNameAC = (text) => ({type: SET_NEW_CITY_NAME, text});\r\nexport const setErrorAC = (error) => ({type: SET_NEW_CITY_NAME, error});\r\nexport const updateForecastCityAC = (cityData) => ({type: UPDATE_FORECAST_CITY, cityData});\r\nexport const toggleFetchingAC = (isFetching) => ({type: IS_FETCHING, isFetching});\r\nexport const updateInProgressAC = (cityID, isUpdate) => ({type: IS_UPDATE, cityID, isUpdate});\r\nexport const uploadHourlyForecastAC = (hourlyForecas) => ({type: UPLOAD_HOURLY_FORECAST, hourlyForecas});\r\nexport const removeCityAC = (cityID) => ({type: REMOVE_CITY, cityID});\r\nexport const resetHourlyForecastAC = () => ({type: RESET_HOURLY_FORECAST});\r\nexport const hiddenIdenticalCityAC = () => ({type: HIDDEN_IDENTICAL_CITY});\r\n\r\nexport const getCity = (cityID) => async (dispatch) => {\r\n    dispatch(toggleFetchingAC(true));\r\n    let response = await WeatherApi.getCities(cityID)\r\n    dispatch(setDefaultForecastCityAC(response.data));\r\n    dispatch(toggleFetchingAC(false));\r\n    \r\n}\r\nexport const updateForecastCity = (cityID) => async (dispatch) => {\r\n    dispatch(updateInProgressAC(cityID, true))\r\n    let response = await WeatherApi.getCities(cityID);\r\n    dispatch(updateForecastCityAC(response.data))\r\n    dispatch(updateInProgressAC(cityID, false))\r\n}\r\n\r\nexport const removeCity = (cityID) => async (dispatch) => {\r\n    dispatch(removeCityAC(JSON.parse(localStorage.getItem(cityID))))\r\n    dispatch(removeCityAC(cityID))\r\n}\r\n\r\nexport const setNewCityName = (text) => async (dispatch) => {\r\n    dispatch(setNewCityNameAC(text))\r\n}\r\n\r\nexport const getNewCity = (text) => async (dispatch) => {\r\n    let response = await WeatherApi.getNewCityName(text);\r\n    if (response.statusText === 'OK') {\r\n        dispatch(setForecastCityAC(response.data));\r\n        return response.data.status\r\n    } else {\r\n        return response.data.statusText\r\n    }\r\n    \r\n}\r\n\r\nexport const uploadHourlyForecast = (lat, lon) => async (dispatch) => {\r\n    let response = await WeatherApi.getHourlyForecast(lat, lon);\r\n    if (response.statusText === 'OK') {\r\n        const hourlyForecast = response.data.hourly\r\n            .splice(0, 12)\r\n            .map(key => {\r\n                const hours = timeConverter(key.dt, true);\r\n                return {time: hours, temp: Math.round(key.temp), icon: key.weather[0].icon}\r\n            });\r\n    \r\n        dispatch(uploadHourlyForecastAC(hourlyForecast));\r\n    }\r\n}\r\n\r\nexport const resetHourlyForecast = () => (dispatch) => {\r\n    dispatch(resetHourlyForecastAC())\r\n}\r\n\r\nexport const hiddenIdenticalCityError = () => (dispatch) => {\r\n    dispatch(hiddenIdenticalCityAC())\r\n}\r\n\r\n\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport {useTheme} from '@mui/material/styles';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {resetHourlyForecast, uploadHourlyForecast} from \"../../Redux/city_list_reducer\";\r\nimport style from './modalMoreDetails.module.scss';\r\nimport {Box, CircularProgress} from \"@mui/material\";\r\nimport {useState} from \"react\";\r\n\r\nexport default function ModalMoreDetails({updateInProgress, ...props}) {\r\n    const dispatch = useDispatch(),\r\n        hourlyForecast = useSelector(state => state.cities.hourlyForecast),\r\n        [open, setOpen] = useState(false);\r\n    \r\n    \r\n    const theme = useTheme(),\r\n        fullScreen = useMediaQuery(theme.breakpoints.down('md')),\r\n        weatherIcon = `http://openweathermap.org/img/wn/${props.city.weather[0].icon}@2x.png`;\r\n    \r\n    let identLeftHourlyForecastItem = 0;\r\n    \r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n        dispatch(uploadHourlyForecast(props.city.coord.lat, props.city.coord.lon));\r\n    };\r\n    \r\n    const handleClose = () => {\r\n        dispatch(resetHourlyForecast());\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" color=\"inherit\" disabled={updateInProgress}\r\n                    sx={{\r\n                        color: '#ffff',\r\n                        borderColor: '#bfbfbf',\r\n                    }}\r\n                    onClick={handleClickOpen}> More details </Button>\r\n            <Dialog fullScreen={fullScreen} open={open} onClose={handleClose}\r\n                    sx={{'.MuiPaper-root': {\r\n                            backgroundColor: 'rgba(0, 0, 0, .4)',\r\n                            backdropFilter: 'blur(7px)',\r\n                        },}}\r\n                aria-labelledby=\"responsive-dialog-title\">\r\n                <DialogTitle id=\"responsive-dialog-title\" className={style.title}>\r\n                    <div><p>{props.dateTime}</p>{props.city.name}, {props.city.sys.country}</div>\r\n                    <button className={style.btnClose} onClick={handleClose}>&#10006;</button>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText className={style.tempWrapper}>\r\n                        <img className={style.weatherIcon} src={weatherIcon} alt='weather icon'/>\r\n                        <span className={style.temp}>{Math.round(props.city.main.temp)}&deg;C</span>\r\n                    </DialogContentText>\r\n                    <div className={style.forecast}>\r\n                        <div>Feels like: {Math.round(props.city.main.feels_like)}&deg;C.</div>\r\n                        <div>Minimum temperature at the moment : {Math.round(props.city.main.temp_min)}&deg;C.</div>\r\n                        <div>Maximum temperature at the moment : {Math.round(props.city.main.temp_max)}&deg;C.</div>\r\n                        <div>{props.city.weather[0].main}: {props.city.weather[0].description}.</div>\r\n                        {props.city.clouds && <div>Cloudiness : {Math.round(props.city.clouds.all)} %.</div>}\r\n                        {props.city.main.pressur && <div>Atmospheric pressure : {props.city.main.pressure}hPa.</div>}\r\n                        {props.city.main.humidity && <div>Humidity: {props.city.main.humidity}%. </div>}\r\n                        {props.city.wind.speed && <div>Wind speed : {Math.round(props.city.wind.speed)} m/s.</div>}\r\n                        {props.city.rain && <div>Rain volume for the last 1 hour : {props.city.rain[\"1h\"]} mm.</div>}\r\n                        {props.city.rain && <div>Rain volume for the last 3 hours : {props.city.rain[\"3h\"]} mm.</div>}\r\n                        {props.city.snow && <div>Snow volume for the last 1 hour : {props.city.snow[\"1h\"]} mm.</div>}\r\n                        {props.city.snow && <div>Snow volume for the last 3 hours : {props.city.snow[\"3h\"]} mm.</div>}\r\n                    </div>\r\n                </DialogContent>\r\n                <div className={style.hourlyForecast}>\r\n                    {\r\n                        !hourlyForecast\r\n                            ? <CircularProgress color='inherit' sx={{color: '#ffff'}}/>\r\n                            : hourlyForecast.map((item, index) => {\r\n                                identLeftHourlyForecastItem += 33;\r\n                                return (\r\n                                    <HourlyForecastItem temp={item.temp} key={index}\r\n                                                        icon={item.icon}\r\n                                                        time={item.time}\r\n                                                        identLeft={identLeftHourlyForecastItem}/>\r\n                                )\r\n                            })\r\n                    }\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst HourlyForecastItem = ({temp, identLeft, icon, time}) => {\r\n    \r\n    const identL = identLeft === 33 ? 0 : identLeft-33,\r\n        temperature = temp > 0 ? '+'+temp : temp,\r\n        weatherIcon = `http://openweathermap.org/img/wn/${icon}@2x.png`;\r\n    \r\n    let color = '#ff0000';\r\n\r\n    if (temp >= 25) {\r\n        color = 'rgba(248,255,0,0.9)';\r\n    } else if (temp >= 20) {\r\n        color = 'rgba(251,255,90,0.9)';\r\n    } else if (temp >= 15) {\r\n        color = 'rgba(252,255,117,0.9)';\r\n    } else if (temp >= 10) {\r\n        color = 'rgba(242,245,163,0.9)';\r\n    } else if (temp >= 5) {\r\n        color = 'rgba(160,222,248,0.9)';\r\n    } else if (temp >= 0) {\r\n        color = 'rgba(125,186,248,0.9)';\r\n    } else if (temp >= -5) {\r\n        color = 'rgba(90,169,248,0.9)';\r\n    } else if (temp >= -10) {\r\n        color = 'rgba(73,163,255,0.9)';\r\n    } else if (temp >= -15) {\r\n        color = 'rgba(50,151,255,0.9)';\r\n    } else if (temp >= -20) {\r\n        color = 'rgba(28,140,255,0.9)';\r\n    } else if (temp >= -25) {\r\n        color = 'rgba(0,116,219,0.9)';\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Box className={style.hourlyForecast__item} sx={{\r\n                top: `calc(50% - ${temp}%)`,\r\n                left: identL+'px',\r\n                backgroundColor: color,\r\n            }}>{temperature}</Box>\r\n            <img className={style.hourlyForecast__icon} src={weatherIcon}\r\n                 style={{top: `calc(50% - ${temp +13}%)`, left: identL+'px'}}\r\n                 alt=\"icon\"/>\r\n            <span className={style.hourlyForecast__time} style={{left: identL+'px'}}>\r\n                {time}\r\n            </span>\r\n        </>\r\n    )\r\n}","import ModalMoreDetails from \"../modal/modalMoreDetails\";\r\nimport style from './CardItem.module.scss'\r\nimport {CircularProgress, Divider, IconButton, Tooltip} from \"@mui/material\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {removeCity, updateForecastCity} from \"../../Redux/city_list_reducer\";\r\nimport timeConverter from \"../../utils/convertTimestamp\";\r\n\r\nconst CardItem = (props) => {\r\n    const weatherIcon = `http://openweathermap.org/img/wn/${props.city.weather[0].icon}@2x.png`,\r\n        weather = props.city.weather[0].description && props.city.weather[0].description[0].toUpperCase() + props.city.weather[0].description.slice(1),\r\n        dispatch = useDispatch(),\r\n        isUpdate = useSelector(state => state.cities.isUpdate),\r\n        dateTime = timeConverter(props.city.dt);\r\n    \r\n    const onUpdateForecastCity = (cityID) => {\r\n        dispatch(updateForecastCity(cityID));\r\n    }\r\n    \r\n    const onDeleteCity = (cityID) => {\r\n        dispatch(removeCity(cityID));\r\n    }\r\n    \r\n    const updateInProgress = isUpdate.some(id => id === props.city.id);\r\n\r\n    return (\r\n        <>\r\n            <div className={style.wrapper}>\r\n                {updateInProgress\r\n                    ? <div className={style.loader}>\r\n                        <CircularProgress color='inherit' sx={{color: '#ffff'}}/>\r\n                     </div>\r\n                    : <>\r\n                        <div className={style.dateTime}>{dateTime}</div>\r\n                        <div className={style.head}>{props.city.name}, {props.city.sys.country}</div>\r\n                        <div className={style.body}>\r\n                            <img src={weatherIcon} alt='weather icon'/>\r\n                            <p>{Math.round(props.city.main.temp)}&deg;C</p>\r\n                        </div>\r\n                        <div className={style.footer}>\r\n                            Feels like {Math.round(props.city.main.feels_like)}&deg;C. {weather}.\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>\r\n            <Divider sx={{borderColor: '#bfbfbf'}}/>\r\n            <div className={style.btns}>\r\n                <ModalMoreDetails updateInProgress={updateInProgress} city={props.city} dateTime={dateTime}/>\r\n                <Buttons onDeleteCity={onDeleteCity} id={props.city.id}\r\n                         onUpdateForecastCity={onUpdateForecastCity}\r\n                         updateInProgress={updateInProgress}/>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\nexport default CardItem;\r\n\r\nconst Buttons = (props) => {\r\n    return (\r\n        <div>\r\n            <Tooltip title=\"Delete\" placement=\"top\">\r\n                <IconButton aria-label=\"delete\"\r\n                            onClick={() => {props.onDeleteCity(props.id)}}\r\n                            disabled={props.updateInProgress}>\r\n                    <DeleteIcon/>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Update\" placement=\"top\">\r\n                <IconButton aria-label=\"update\"\r\n                            onClick={() => {props.onUpdateForecastCity(props.id)}}\r\n                            disabled={props.updateInProgress}>\r\n                    <RefreshIcon/>\r\n                </IconButton>\r\n            </Tooltip>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';import Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport {Fab} from \"@mui/material\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getNewCity, hiddenIdenticalCityError, setNewCityName} from \"../../Redux/city_list_reducer\";\r\nimport style from './modalMoreDetails.module.scss'\r\n\r\n\r\nconst AddNewCardModal = () => {\r\n    const [open, setOpen] = useState(false),\r\n         [error, setError] = useState(false),\r\n        dispatch = useDispatch();\r\n    const newCityName = useSelector(state => state.cities.newCityName),\r\n        isIdenticalCity = useSelector(state => state.cities.isIdenticalCity);\r\n    \r\n    const onHiddenIdenticalCityError = () => {\r\n        dispatch((hiddenIdenticalCityError()))\r\n    }\r\n    \r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    \r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    \r\n    const handleSubmit = () => {\r\n        dispatch(getNewCity(newCityName)).then(\r\n            result => {\r\n                setOpen(false)\r\n            },\r\n            error => setError(error.response.data.message)\r\n        );\r\n    };\r\n    \r\n    const onChange = (e) => {\r\n        dispatch(setNewCityName(e.target.value))\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {isIdenticalCity && <div className={style.errorPopup__wrapper}>\r\n                    <span className={style.errorPopup}>The weather forecast for this city is already on your list</span>\r\n                    <span className={style.errorPopup__close} onClick={onHiddenIdenticalCityError}>&#10006;</span>\r\n                </div>}\r\n                \r\n            </div>\r\n            <Fab color=\"inherit\" aria-label=\"add\" sx={{\r\n                color: '#ffff',\r\n                backgroundColor: 'transparent',\r\n                \":hover\": {backgroundColor: '#50505078'},\r\n                border: `${1}px solid #bfbfbf`\r\n            }}\r\n                 onClick={handleClickOpen}\r\n            >\r\n                <AddIcon/>\r\n            </Fab>\r\n            <Dialog open={open} onClose={handleClose} sx={{\r\n                '.MuiPaper-root': {\r\n                    backgroundColor: 'rgba(0, 0, 0, .5)',\r\n                    backdropFilter: 'blur(7px)',\r\n                },'.MuiInputBase-root::before': {\r\n                    borderColor: '#ffff',\r\n                },'.MuiInputBase-root': {\r\n                    color: '#ffff',\r\n                }, '.MuiInputLabel-root': {\r\n                    color: '#ffff',\r\n                }\r\n            }}>\r\n                <DialogTitle sx={{color: '#ffff'}}>Add new city</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText sx={{color: '#ffff'}}>\r\n                        To add a new city, enter the city name and country separated by commas. <br/>\r\n                        Example: <span className={style.example}>Kharkiv, UA</span>\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Kharkiv, UA\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        variant=\"standard\"\r\n                        value={newCityName}\r\n                        onChange={onChange}\r\n                    />\r\n                    <div className={style.error}>\r\n                        {error && error.toUpperCase()}\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>Cancel</Button>\r\n                    <Button onClick={handleSubmit}>Add</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddNewCardModal;","import React, {useEffect} from 'react';\r\nimport {CircularProgress} from \"@mui/material\";\r\nimport CardItem from \"../Card/CardItem\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getCity} from \"../../Redux/city_list_reducer\";\r\nimport AddNewCardModal from \"../modal/addNewCardModal\";\r\nimport style from './CityList.module.scss'\r\n\r\nconst CityList = () => {\r\n    const dispatch = useDispatch(),\r\n        cities = useSelector(state => state.cities.cities),\r\n        isFetching = useSelector(state => state.cities.isFetching);\r\n    \r\n    useEffect(() => {\r\n        dispatch(getCity(5128581));\r\n        dispatch(getCity(2759794));\r\n        dispatch(getCity(2950158));\r\n        dispatch(getCity(706483));\r\n    }, []);\r\n    \r\n    return (\r\n        isFetching\r\n            ? <CircularProgress size={100} thickness={5} color='inherit'\r\n                                sx={{position: 'absolute', inset: `${45}% 0 0 ${45}%`, color: '#ffff'}}/>\r\n            : <div className={style.wrapper}>\r\n                <>\r\n                    {cities.map(city => (<div className={style.card} key={city.id}><CardItem city={city}/></div>))}\r\n                    <div className={style.addCard}><AddNewCardModal/></div>\r\n                </>\r\n            </div>\r\n    \r\n    );\r\n};\r\n\r\nexport default CityList;","import './App.module.scss';\nimport style from './App.module.scss';\nimport CityList from \"./Components/CityList/CityList\";\nimport {Route, Switch, Redirect} from \"react-router-dom\";\n\nfunction App() {\n    \n    return (\n        <main className={style.app}>\n            <h1 className={style.title}>Weather forecast</h1>\n            <Switch>\n                <Route exact path='/'>\n                    <CityList/>\n                </Route>\n                <Redirect to='/'/>\n            </Switch>\n        </main>\n    );\n}\n\nexport default App;\n","import {applyMiddleware, combineReducers, createStore, compose} from \"redux\";\r\nimport cityListReducer from \"./city_list_reducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst reducers = combineReducers({\r\n    cities: cityListReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./Redux/redux_store\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"modalMoreDetails_title__36iPS\",\"btnClose\":\"modalMoreDetails_btnClose__fRiZB\",\"tempWrapper\":\"modalMoreDetails_tempWrapper__1PAR9\",\"weatherIcon\":\"modalMoreDetails_weatherIcon__374yG\",\"temp\":\"modalMoreDetails_temp__33t-D\",\"forecast\":\"modalMoreDetails_forecast__oTztA\",\"hourlyForecast\":\"modalMoreDetails_hourlyForecast__1sbGi\",\"hourlyForecast__item\":\"modalMoreDetails_hourlyForecast__item__3BWyE\",\"hourlyForecast__icon\":\"modalMoreDetails_hourlyForecast__icon__10Ysz\",\"hourlyForecast__time\":\"modalMoreDetails_hourlyForecast__time__258IR\",\"example\":\"modalMoreDetails_example__3ycuD\",\"error\":\"modalMoreDetails_error__wPKDV\",\"errorPopup\":\"modalMoreDetails_errorPopup__35fRU\",\"errorPopup__wrapper\":\"modalMoreDetails_errorPopup__wrapper___ucsz\",\"errorPopup__close\":\"modalMoreDetails_errorPopup__close__26kdY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CardItem_wrapper__2Ivob\",\"dateTime\":\"CardItem_dateTime__2bov_\",\"head\":\"CardItem_head__3Eoa8\",\"body\":\"CardItem_body__2T3ov\",\"footer\":\"CardItem_footer__6oT9t\",\"btns\":\"CardItem_btns__1vHyJ\",\"loader\":\"CardItem_loader__12lgu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__QbNjA\",\"title\":\"App_title__dACP-\",\"wrapper\":\"App_wrapper__36aDE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CityList_wrapper__cNWlX\",\"card\":\"CityList_card__2CqHf\",\"addCard\":\"CityList_addCard__spH7V\"};"],"sourceRoot":""}